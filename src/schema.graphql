scalar Date
scalar Time
scalar DateTime
scalar JSON

enum UnitType {
  apartment
  apartment_building
  barn
  boat
  bnb
  bnb_unit
  building
  bungalow
  cabin
  caravan
  castle
  chacara
  chalet
  chateau
  condo
  condo_building
  condo_hotel
  condo_hotel_unit
  cottage
  estate
  farmhouse
  guesthouse
  hotel
  hotel_unit
  house
  house_boat
  lodge
  mas
  mill
  mobile_home
  recreational_vehicle
  riad
  room
  studio
  townhome
  villa
  yacht
}

enum BathroomType {
  full
  half
  shower
}

enum BedroomType {
  bedroom
  living_sleeping
  other_sleeping
}

enum RefundPolicyType {
  custom
  no_refund
  full
  day7
  day30
  day45
  day60
  day90
}

enum AirBnbRefundPolicyType {
  flexible
  moderate
  strict_14_with_grace_period
  super_strict_30
  super_strict_60
}

enum BookingComRefundPolicyType {
  no_refund
  full
  day7
  day30
  day42
  day60
}

enum HomeawayRefundPolicyType {
  no_refund
  relaxed
  moderate
  firm
  strict
}
type Location {
   id: Int
   adrStreet: String
   adrUnit: String
   adrCity: String
   adrState: String
   adrCountry: String
   adrPostalCode: String
   geoLatitude: Float
   geoLongitude: Float
   locationableType: String
   locationableId: Int
   createdAt: DateTime
   updatedAt: DateTime
   organizationId: String
}

input SearchOptions {
  ignoreCache: Boolean
}

type User {
  id: Int!
  name: String!
  email: String!
  avatar: String
  telephone: String!
  confirmed: Boolean
  organizations: JSON
}

type UserOrg {
  orgName: String
  orgUrl: String
}

type BookingOrganization {
  name: String
  currency: String
  url: String
}

type Organization {
  id: Int
  orgName: String
  subDomain: String
  address: String
  type: String
  user: String
  createdAt: DateTime
  totalBrands: Int
  totalDomains: Int
  totalProperties: Int
  totalUnits: Int
  totalUnitListings: Int
  totalBookings: Int
  isConfirmed: Boolean
  isOnBoarded: Boolean
  isActive: Boolean
  orgCurrency: String
  orgUrl: String
}

type Unit {
  id: Int
  name: String
  summaryDescription: String
  # featuresAccommodations: JSON
  # featuresDining: String
  # featuresEntertainment: String
  # featuresOutdoor: String
  # featuresSpa: String
  # featuresSuitability: String
  # featuresThemes: String
  numberOfBathrooms: Float!
  numberOfBedrooms: Int!
  lounge: Int!
  numSleep: Int!
  numSleepInBeds: Int!
  unitType: UnitType

  checkInInstructions: JSON
  emergencyContactPhone: String
  emergencyContactFirstName: String
  emergencyContactLastName: String

  propertyId: Int!
  portfolioId: Int!
  externalId: String!
  externalContractId: Int
  airbnbHeadline: String
  pointcentralCustomerId: String

  active: Boolean!
  createdAt: DateTime
  updatedAt: DateTime

  organization: Organization
  unitPricing: UnitPricing
  availability: UnitAvailability

  bathrooms: [Bathroom]
  bedrooms: [Bedroom]
  images: [UnitImage]
  listings: [UnitListing]
  upcomingBookings: [UpcomingBooking]
  featuresAccommodations: JSON
  featuresAmenities: JSON
  featuresDining: JSON
  featuresEntertainment: JSON
  featuresOutdoor: JSON
  featuresSpa: JSON
  
}

type UnitPricing {
  id: Int!
  defaultNightlyWeekday: Float!
  discountFullMonth: Float
  pricingCalendar: String
  unitListingId: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

type Bathroom {
  id: Int!
  bathroomType: BathroomType!
  amenities: JSON
}

type Bedroom {
  id: Int!
  bedroomType: BedroomType
  amenities: JSON
}

type UnitImage {
  id: Int!
  image: String
  label: String
  order: Int
  height: Int
  width: Int

  unit: Unit
}

type UnitListing {
  id: Int!
  listingCurrency: String
  taxRate: Float
  instantBooking: Boolean
  refundPolicy: RefundPolicyType
  refundPolicyCustom: String
  featured: Boolean
  enabledHomeAway: Boolean
  enabledBooking: Boolean
  enabledAirBnB: Boolean
  airBnbRefundPolicy: AirBnbRefundPolicyType
  bookingComRefundPolicy: BookingComRefundPolicyType
  homeawayRefundPolicy: HomeawayRefundPolicyType
  listingName: String
  listingUrl: String
  adjTax: Float
  maxNightWithTaxRate: Int
  excludeTax: Boolean
  taxAdjustable: Boolean

  brand: Brand
  unit: Unit
  unitPricing: UnitPricing

  upcomingBookings: [UpcomingBooking]
}

type UnitAvailability {
  id: Int!
  defaultAvailabilityChangeover: JSON
  defaultStayMax: Int
  defaultStayMin: Int
  defaultTimeCheckIn: String
  defaultTimeCheckOut: String
  defaultPriorNotifyMin: Int
  availabilityCalendar: JSON
  bookingCalendar: JSON
  checkInCheckOutPolicy: String

  unit: Unit
}


type Brand {
  id: Int!
  name: String
  description: String
  currency: Int
  language: Int
  taxRate: Float
  dateFormat: String

  organization: [Organization]
  units: [Unit]
}

type Total {
  startTotal: Float
  directFee: Float
  stripeFee: Float
  orgTotal: Float
}

type Customer {
  name: String
  email: String
}

type UpcomingBooking {
  bookingCode: String
  url: String
  checkIn: String
  checkOut: String
  totals: [Total]
  organization: [BookingOrganization]
  listing: [UnitListing]
  customer: [Customer]

}

type Booking {
  bookings: JSON
  brands: JSON
  channels: JSON
  listings: JSON
  view: String
  charges: JSON
  jsonCharges: JSON
  refunds: JSON
  customer: JSON
  guestContact: JSON
  listing: JSON
  organization: JSON
  currentEmployeeRole: String
  stripePublishableKey: String

  booking: JSON
  bookingChannelLogo: String
  bookingChannelName: String
  stripeAccountId: JSON #could be int or string my data source said null
  deposits: JSON
  priceStatus: String
  cancelledRefundStatus: String
  unit: [Unit]

  property: JSON
  location: JSON
  securityDepositCollected: Boolean
  workOrders: JSON
  quote: JSON
  roomRate: Int

  specialGuestFeeRate: Int
  specialGuestFeeAmount: Int

  managementFeeRate: Int
  managementFeeAmount: Int
  totalManagementFees: Int
  fees: JSON
  feesTotal: Float 

  propertyOwnerNet: Float
  propertyOwnerRate: Float

  houseKeepingRate: Float
  houseKeepingNet: Float

  channelInflatorAmount: Int
  channelInflatorRate: Int 
  channelFeeAmount: Float
  channelFeeRate: Float

  organizationNet: Float
  avgRoomRate: Float
  billableRange: Int

  losDiscountType: String
  losDiscountRate: JSON
  losDiscountAmount: Float

  taxRate: Float
  taxAmount: Float
  bookingTotal: Float
  directFee: Float
  directFeeRate: Float
  totalSystemFees: Float

  stripeFee: Float
  stripePayout: Float
  
  totalPayout: Float
  propertyOwnerSubtotal: Float
  netBeforeFees: Float
  source: String
  bookingNetDetail: JSON
  loading: Boolean


}


type Property {
  id: Int
  name: String
  actiive: Boolean
  multiUnit: Boolean
  summaryAccommodations: String
  summaryDescription: String
  summaryHeadline: String
  summaryRules: String
  featuresAdventure: JSON
  featuresAttractions: JSON
  featuresCar: JSON
  featuresLeisure: JSON
  featuresLocal: JSON
  featuresLocation: JSON
  propertyType: String
  organizationId: Int
  createdAt: DateTime
  updatedAt: DateTime
  managerInfoVisible: Boolean
  registrationId: String
  externalId: String
  extra: JSON
  location: Location
  imagesProperty: JSON
  attachedFiles: JSON
  distributionRequiredAmenities: [String]
  isIncomplete: Boolean
  bookings: [Booking]
  bookingsUpcoming: [Booking]
  bookingsWithUnpaid:[Booking]
  brands: String
  googleMapsApiKey: Float
  incompleteProperties: String
  listings: String
  defaultListing: JSON
  notifications: String
  pages: String
  PropertyCount: Int
  properties: String
  recentBookings: String
  stripeConnectAccount: String
  stripeConnectKey: String
  units: [Unit]
  bathrooms: [Bathroom] 
  bedrooms: [Bedroom]
  featuresAccommodations: JSON
  featuresAmenities: JSON
  featuresDining: JSON
  featuresEntertainment: JSON
  featuresOutdoor: JSON
  featuresSpa: JSON
  featuresSuitability: JSON
  featuresThemes: JSON
  imagesUnit: UnitImage
  available30Days: Boolean
  unitAvailability: UnitAvailability
  availabilityCalendar: JSON
  defaultAvailabilityChangeover: JSON
  unlistedBrands: JSON
}

type Employee {
  name: String
  id: Int
  email: String
  margin: String
  organizationId: Int
  role: String
  team: String
  payoutFrequency: String
}

type InactiveProperty {
  id: Int
  active: Boolean
  name: String
  propertyType: String
  units: JSON
}

type Query {
  hello(name: String): String
  organizations(options: SearchOptions): [Organization!]!
  organization(id: Int!): Organization
  units: [Unit]
  upcomingBookings: [UpcomingBooking]
  users: [User]
  property(organizationId: Int!,id: Int!): Property
  me: User
  inactiveProperties(id: Int!): [InactiveProperty]
  employees(organizationId: Int!): [Employee]
  unit(organizationId: Int!): [Unit]
  bookings(organizationId: Int, bookingCode: String): [Booking]
}
